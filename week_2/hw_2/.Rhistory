library("rvest")
page.resource <- read_html("http://na.op.gg/champion/statistics")
heros.rank <- html_nodes(page.resource, ".champion-index-table__cell--value , .champion-index-table__header , .champion-index-table__cell--rank , .champion-index-table__cell--champion")
heros.rank %>% html_text()
library(rvest)
install.packages("rvest")
install.packages("httr")
install.packages("xml")
install.packages("XML")
install.packages("rcurl")
install.packages("RCurl")
library(rvest)
library(httr)
page.source <- read_html("https://en.wikipedia.org/wiki/R_(programming_language)")
version.block <- html_nodes(page.source, ".wikitable th+ td , th:nth-child(2) , .wikitable th:nth-child(1)")
head(version.block)
content <- html_text(version.block)
head(content)
page.source <- read_html("https://tw.yahoo.com/")
hot.keywords <- html_nodes(page.source, ".keywords .Whs-nw")
html_text(hot.keywords)
news.title <- html_nodes(page.source, ".Va-tt")
html_text(news.title)
library("rvest")
page.resource <- read_html("http://na.op.gg/champion/statistics")
heros.rank <- html_nodes(page.resource, ".champion-index-table__cell--value , .champion-index-table__header , .champion-index-table__cell--rank , .champion-index-table__cell--champion")
heros.rank %>% html_text()
install.packages("rvest")
install.packages("httr")
url <- read_html("http://www.op.gg/champion/statistics")
opgg.selected <- html_nodes(url, ".champion-index-table__header , .champion-index-table__position , .champion-index-table__name , .champion-index-table__cell--value , .champion-index-table__cell--rank , .tabHeader a , h2")
library(rvest)
library(httr)
url <- read_html("http://www.op.gg/champion/statistics")
opgg.selected <- html_nodes(url, ".champion-index-table__header , .champion-index-table__position , .champion-index-table__name , .champion-index-table__cell--value , .champion-index-table__cell--rank , .tabHeader a , h2")
opgg.selected.content <- html_text(opgg.selected)
opgg.selected.content
opgg.selected.content
opgg.selected <- html_nodes(url, ".champion-index-table__header , .champion-index-table__position , .champion-index-table__name , .champion-index-table__cell--value , .champion-index-table__cell--rank , .tabHeader a , h2")
opgg.selected.content <- html_text(opgg.selected)
str(opgg.selected.content)
library(rvest)
library(httr)
page.source <- read_html("https://en.wikipedia.org/wiki/R_(programming_language)")
version.block <- html_nodes(page.source, ".wikitable th+ td , th:nth-child(2) , .wikitable th:nth-child(1)")
head(version.block)
content <- html_text(version.block)
head(content)
page.source <- read_html("https://tw.yahoo.com/")
hot.keywords <- html_nodes(page.source, ".keywords .Whs-nw")
html_text(hot.keywords)
news.title <- html_nodes(page.source, ".Va-tt")
html_text(news.title)
page.source <- read_html("https://tw.yahoo.com/")
hot.keywords <- html_nodes(page.source, ".keywords .Whs-nw")
html_text(hot.keywords)
news.title <- html_nodes(page.source, ".Va-tt")
html_text(news.title)
library(rvest)
library(httr)
page.source <- read_html("https://en.wikipedia.org/wiki/R_(programming_language)")
version.block <- html_nodes(page.source, ".wikitable th+ td , th:nth-child(2) , .wikitable th:nth-child(1)")
head(version.block)
content <- html_text(version.block)
head(content)
page.source <- read_html("https://tw.yahoo.com/")
hot.keywords <- html_nodes(page.source, ".keywords .Whs-nw")
html_text(hot.keywords)
news.title <- html_nodes(page.source, ".Va-tt")
html_text(news.title)
library(rvest)
library(httr)
url <- read_html("http://www.op.gg/champion/statistics")
opgg.selected <- html_nodes(url, ".champion-index-table__header , .champion-index-table__position , .champion-index-table__name , .champion-index-table__cell--value , .champion-index-table__cell--rank , .tabHeader a , h2")
opgg.selected.content <- html_text(opgg.selected)
url <- read_html("http://www.op.gg/champion/statistics", encoding = 'utf-8')
opgg.selected <- html_nodes(url, ".champion-index-table__header , .champion-index-table__position , .champion-index-table__name , .champion-index-table__cell--value , .champion-index-table__cell--rank , .tabHeader a , h2")
opgg.selected.content <- html_text(opgg.selected)
opgg.selected.content
url <- read_html("http://www.op.gg/summoner/userName=hide+on+bush", encoding = 'utf-8')
opgg.selected <- html_nodes(url, ".Cell , .KDA , .Cell a , .tablesorter-headerUnSorted")
opgg.selected.content <- html_text(opgg.selected)
opgg.selected.content
library(httr)
page.source <- read_html("https://en.wikipedia.org/wiki/R_(programming_language)")
version.block <- html_nodes(page.source, ".wikitable th+ td , th:nth-child(2) , .wikitable th:nth-child(1)")
head(version.block)
content <- html_text(version.block)
head(content)
page.source <- read_html("https://tw.yahoo.com/")
hot.keywords <- html_nodes(page.source, ".keywords .Whs-nw")
html_text(hot.keywords)
source('~/Documents/GitHub/CSX4001/week_2/hw_2/爬蟲練習/Rvest_Practice_2.R')
html_text(hot.keywords)
library(rvest)
library(httr)
page.source <- read_html("https://en.wikipedia.org/wiki/R_(programming_language)")
version.block <- html_nodes(page.source, ".wikitable th+ td , th:nth-child(2) , .wikitable th:nth-child(1)")
head(version.block)
content <- html_text(version.block)
head(content)
page.source <- read_html("https://tw.yahoo.com/")
hot.keywords <- html_nodes(page.source, ".keywords .Whs-nw")
html_text(hot.keywords)
news.title <- html_nodes(page.source, ".Va-tt")
html_text(news.title)
install.packages("rlist")
install.packages("stringr")
install.packages("stringr")
library(rvest)
library(httr)
page.source <- read_html("https://en.wikipedia.org/wiki/R_(programming_language)")
version.block <- html_nodes(page.source, ".wikitable th+ td , th:nth-child(2) , .wikitable th:nth-child(1)")
head(version.block)
content <- html_text(version.block)
head(content)
page.source <- read_html("https://tw.yahoo.com/")
hot.keywords <- html_nodes(page.source, ".keywords .Whs-nw")
html_text(hot.keywords)
news.title <- html_nodes(page.source, ".Va-tt")
html_text(news.title)
html_text(news.title)
library(rvest)
library(httr)
page.source <- read_html("https://en.wikipedia.org/wiki/R_(programming_language)")
version.block <- html_nodes(page.source, ".wikitable th+ td , th:nth-child(2) , .wikitable th:nth-child(1)")
head(version.block)
content <- html_text(version.block)
head(content)
page.source <- read_html("https://tw.yahoo.com/")
hot.keywords <- html_nodes(page.source, ".keywords .Whs-nw")
html_text(hot.keywords)
news.title <- html_nodes(page.source, ".Va-tt")
html_text(news.title)
page.source <- read_html("https://tw.yahoo.com/")
hot.keywords <- html_nodes(page.source, ".keywords .Whs-nw")
html_text(hot.keywords)
news.title <- html_nodes(page.source, ".Va-tt")
html_text(news.title)
news.title <- html_nodes(page.source, ".Va-tt")
html_text(news.title)
page.source <- read_html("https://en.wikipedia.org/wiki/R_(programming_language)", encoding = 'utf8')
version.block <- html_nodes(page.source, ".wikitable th+ td , th:nth-child(2) , .wikitable th:nth-child(1)")
head(version.block)
content <- html_text(version.block)
head(content)
page.source <- read_html("https://tw.yahoo.com/")
hot.keywords <- html_nodes(page.source, ".keywords .Whs-nw")
html_text(hot.keywords)
news.title <- html_nodes(page.source, ".Va-tt")
page.source <- read_html("https://en.wikipedia.org/wiki/R_(programming_language)", encoding = 'utf8')
version.block <- html_nodes(page.source, ".wikitable th+ td , th:nth-child(2) , .wikitable th:nth-child(1)")
head(version.block)
content <- html_text(version.block)
head(content)
page.source <- read_html("https://tw.yahoo.com/")
hot.keywords <- html_nodes(page.source, ".keywords .Whs-nw")
html_text(hot.keywords)
news.title <- html_nodes(page.source, ".Va-tt")
html_text(news.title)
page.source <- read_html("https://tw.yahoo.com/", encoding = 'utf-8')
hot.keywords <- html_nodes(page.source, ".keywords .Whs-nw")
html_text(hot.keywords)
news.title <- html_nodes(page.source, ".Va-tt")
html_text(news.title)
library(rvest)
library(httr)
page.source <- read_html("https://en.wikipedia.org/wiki/R_(programming_language)", encoding = 'utf8')
version.block <- html_nodes(page.source, ".wikitable th+ td , th:nth-child(2) , .wikitable th:nth-child(1)")
head(version.block)
content <- html_text(version.block)
head(content)
page.source <- read_html("https://tw.yahoo.com/", encoding = 'utf-8')
hot.keywords <- html_nodes(page.source, ".keywords .Whs-nw")
html_text(hot.keywords)
news.title <- html_nodes(page.source, ".Va-tt")
html_text(news.title)
# ??Ｙ????冽?????雿????
random <- sample(1000:9999,1)
# 撠????雿???詨????箏???????詨??
r.thou <- random %/% 1000
r.hund <- (random %/% 100) %% 10
r.tent <- (random %% 100) %/% 10
r.numb <- random %% 10
# 撠?????????詨??蝺函?粹?????
r.list <- c(r.thou, r.hund, r.tent, r.numb)
# 摰?蝢拇活??貊?????
times <- c(1:9999)
# 閮?蝞?蝮賢?梁??鈭?撟暹活
counts <- 0
for (j in times)
{
# ??芾??頛詨?仿?冽??????????詨??
guess <- scan(nmax = 1)
# 撠????雿???詨????箏???????詨??
g.thou <- guess %/% 1000
g.hund <- (guess %/% 100) %% 10
g.tent <- (guess %% 100) %/% 10
g.numb <- guess %% 10
# 撠?????????詨??蝺函?粹?????
g.list <- c(g.thou, g.hund, g.tent, g.numb)
# 撠? r.list ??? g.list 銝剖??蝝?鈭???豢??撠?
x <- 1:4
correct <- 0
for(i in x)
{
if (r.list[i] == g.list[i]) {
correct = correct + 1
}
}
cat(correct, "A", 4-correct, "B")
# ??? guess 蝑???? random ???頝喳?箄艘???嚗?銝西撓??? counts
if (guess == random){
break
} else {
counts = counts + 1
}
}
cat("蝮賢?梁??鈭?:", counts + 1, "甈?")
setwd("~/Documents/GitHub/CSX4001/week_2/hw_2")
source('~/Documents/GitHub/CSX4001/week_2/hw_2/hw_2.R')
library(httr)
library(rvest)
library(httr)
library(tmcn)
source('~/Documents/GitHub/CSX4001/week_2/hw_2/hw_2.R')
library(rvest)
library(httr)
library(tmcn)
url.tw <- read_html("http://tw.op.gg/statistics/ajax2/champion/", encoding = 'utf-8')
champion.tw <- html_nodes(url, ".ChampionName") %>% html_text(trim = T)
rate.tw <- html_nodes(url, ".ChampionName+ .Cell .Value") %>% html_text(trim = T)
KDA.tw <- html_nodes(url, ".Ratio") %>% html_text(trim = T)
url.tw <- read_html("http://tw.op.gg/statistics/ajax2/champion/", encoding = 'utf-8')
champion.tw <- html_nodes(url, ".ChampionName") %>% html_text(trim = T)
url.tw <- read_html("http://tw.op.gg/statistics/ajax2/champion/", encoding = 'utf-8')
champion.tw <- html_nodes(url, ".ChampionName") %>% html_text(trim = T)
