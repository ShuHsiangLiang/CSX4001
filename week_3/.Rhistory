library("rvest")
page.resource <- read_html("http://na.op.gg/champion/statistics")
heros.rank <- html_nodes(page.resource, ".champion-index-table__cell--value , .champion-index-table__header , .champion-index-table__cell--rank , .champion-index-table__cell--champion")
heros.rank %>% html_text()
library(rvest)
install.packages("rvest")
install.packages("httr")
install.packages("xml")
install.packages("XML")
install.packages("rcurl")
install.packages("RCurl")
library(rvest)
library(httr)
page.source <- read_html("https://en.wikipedia.org/wiki/R_(programming_language)")
version.block <- html_nodes(page.source, ".wikitable th+ td , th:nth-child(2) , .wikitable th:nth-child(1)")
head(version.block)
content <- html_text(version.block)
head(content)
page.source <- read_html("https://tw.yahoo.com/")
hot.keywords <- html_nodes(page.source, ".keywords .Whs-nw")
html_text(hot.keywords)
news.title <- html_nodes(page.source, ".Va-tt")
html_text(news.title)
library("rvest")
page.resource <- read_html("http://na.op.gg/champion/statistics")
heros.rank <- html_nodes(page.resource, ".champion-index-table__cell--value , .champion-index-table__header , .champion-index-table__cell--rank , .champion-index-table__cell--champion")
heros.rank %>% html_text()
install.packages("rvest")
install.packages("httr")
print("Hello, ", name)
SayHello <- function (name){
print("Hello, ", name)
}
SayHello("Pecu")
SayHello <- function (name){
print("Hello, ", name)
}
SayHello("Pecu")
SayHello <- function (name){
cat("Hello, ", name)
}
SayHello("Pecu")
GetBmi <- function(my.height.cm, my.weight.kg){
my.height.m <- my.height.cm / 100
my.bmi <- my.weight.kg / (my.height.m) ^ 2
return my.bmi
}
return (my.bmi)
GetBmi <- function(my.height.cm, my.weight.kg){
my.height.m <- my.height.cm / 100
my.bmi <- my.weight.kg / (my.height.m) ^ 2
return (my.bmi)
}
GetBmi(180, 55)
GetBmi <- function(my.height.cm, my.weight.kg){
my.height.m <- my.height.cm / 100
my.bmi <- my.weight.kg / (my.height.m) ^ 2
return (my.bmi)
}
GetBmi(180, 55)
CheckBmiLevel <- function(my.height.cm, my.weight.kg){
my.bm
}
CheckBmiLevel <- function(my.height.cm, my.weight.kg){
my.bmi <- my.weight.kg / (my.height.m) ^ 2
if (my.bmi >= 35){
return(paste("Your bmi:", my.bmi, ", 重度肥胖！"))
} elsie if (my.bmi >= 30){
return(paste("Your bmi:", my.bmi, ", 中度肥胖！"))
} elsie if (my.bmi >= 27){
return(paste("Your bmi:", my.bmi, ", 輕度肥胖！"))
} elsie if (my.bmi >= 24){
return(paste("Your bmi:", my.bmi, ", 過重！"))
} elsie if (my.bmi >= 18.5){
return(paste("Your bmi:", my.bmi, ", 正常範圍"))
} else {
return(paste("Your bmi:", my.bmi, ", 過輕"))
}
}
SayHello <- function (name){
cat("Hello, ", name)
}
SayHello("Pecu")
GetBmi <- function(my.height.cm, my.weight.kg){
my.height.m <- my.height.cm / 100
my.bmi <- my.weight.kg / (my.height.m) ^ 2
return (my.bmi)
}
GetBmi(180, 55)
CheckBmiLevel <- function(my.height.cm, my.weight.kg){
my.bmi <- my.weight.kg / (my.height.m) ^ 2
if (my.bmi >= 35){
return(paste("Your bmi:", my.bmi, ", 重度肥胖！"))
} elsie if (my.bmi >= 30){
return(paste("Your bmi:", my.bmi, ", 中度肥胖！"))
} elsie if (my.bmi >= 27){
return(paste("Your bmi:", my.bmi, ", 輕度肥胖！"))
} elsie if (my.bmi >= 24){
return(paste("Your bmi:", my.bmi, ", 過重！"))
} elsie if (my.bmi >= 18.5){
return(paste("Your bmi:", my.bmi, ", 正常範圍"))
} else {
return(paste("Your bmi:", my.bmi, ", 過輕"))
}
}
CheckBmiLevel <- function(my.height.cm, my.weight.kg){
my.bmi <- my.weight.kg / (my.height.cm / 100) ^ 2
if (my.bmi >= 35){
return(paste("Your bmi:", my.bmi, ", 重度肥胖！"))
} elsie if (my.bmi >= 30){
return(paste("Your bmi:", my.bmi, ", 中度肥胖！"))
} elsie if (my.bmi >= 27){
return(paste("Your bmi:", my.bmi, ", 輕度肥胖！"))
} elsie if (my.bmi >= 24){
return(paste("Your bmi:", my.bmi, ", 過重！"))
} elsie if (my.bmi >= 18.5){
return(paste("Your bmi:", my.bmi, ", 正常範圍"))
} else {
return(paste("Your bmi:", my.bmi, ", 過輕"))
}
}
CheckBmiLevel <- function(my.height.cm, my.weight.kg){
my.bmi <- GetBmi(my.height.cm, my.weight.kg)
if (my.bmi >= 35){
return(paste("Your bmi:", my.bmi, ", 重度肥胖！"))
} elsie if (my.bmi >= 30){
return(paste("Your bmi:", my.bmi, ", 中度肥胖！"))
} elsie if (my.bmi >= 27){
return(paste("Your bmi:", my.bmi, ", 輕度肥胖！"))
} elsie if (my.bmi >= 24){
return(paste("Your bmi:", my.bmi, ", 過重！"))
} elsie if (my.bmi >= 18.5){
return(paste("Your bmi:", my.bmi, ", 正常範圍"))
} else {
return(paste("Your bmi:", my.bmi, ", 過輕"))
}
}
CheckBmiLevel <- function(my.height.cm, my.weight.kg){
my.bmi <- GetBmi(my.height.cm, my.weight.kg)
if (my.bmi >= 35){
return(paste("Your bmi:", my.bmi, ", 重度肥胖！"))
} else if (my.bmi >= 30){
return(paste("Your bmi:", my.bmi, ", 中度肥胖！"))
} else if (my.bmi >= 27){
return(paste("Your bmi:", my.bmi, ", 輕度肥胖！"))
} else if (my.bmi >= 24){
return(paste("Your bmi:", my.bmi, ", 過重！"))
} else if (my.bmi >= 18.5){
return(paste("Your bmi:", my.bmi, ", 正常範圍"))
} else {
return(paste("Your bmi:", my.bmi, ", 過輕"))
}
}
bmi.level.msg <- CheckBmiLevel(176, 70)
bmi.level.msg
GetLargest <- function (vector) {
print(past("The Largest Number is :", max(vector)))
}
vec_1 <- c(1, 5, 10, 200, 2000, 121)
GetLargest(vec_1)
GetLargest <- function (vector) {
print(paste("The Largest Number is :", max(vector)))
}
vec_1 <- c(1, 5, 10, 200, 2000, 121)
GetLargest(vec_1)
GetLargest <- function (vector) {
paste("The Largest Number is :", max(vector))
}
vec_1 <- c(1, 5, 10, 200, 2000, 121)
GetLargest(vec_1)
setwd("~/Documents/GitHub/CSX4001")
setwd("~/Documents/GitHub/CSX4001/week_2")
setwd("~/Documents/GitHub/CSX4001/week_2/course_2")
GetBmi <- function(my.height.cm, my.weight.kg){
my.height.m <- my.height.cm / 100
my.bmi <- my.weight.kg / (my.height.m) ^ 2
return (my.bmi)
}
df <- read.table('107-1RSampleCode/week_2/course_2/test_data.csv', sep = ',', header = T, stringsAsFactors = F)
GetBmi <- function(my.height.cm, my.weight.kg){
my.height.m <- my.height.cm / 100
my.bmi <- my.weight.kg / (my.height.m) ^ 2
return (my.bmi)
}
df <- read.table('test_data.csv', sep = ',', header = T, stringsAsFactors = F)
dim(df)
dim(df)
head(df)
tail(df)
summary(df)
str(df)
Height <- c(179, 165, 158, 165, 172, 170, 168, 163, 169, 155)
Weight <- c(69, 62, 46, 50, 72, 70, 52, 49, 63, 49)
Kobe <- c("Kobe", "A", "M", NA, 39, 198, 96)
df <- cbind(df, Height, Weight)
df <- rbind(df, Kobe)
str(df)
df$Grade[11] <- 990
Height <- c(179, 165, 158, 165, 172, 170, 168, 163, 169, 155)
Weight <- c(69, 62, 46, 50, 72, 70, 52, 49, 63, 49)
Kobe <- c("Kobe", "A", "M", NA, 39, 198, 96)
df <- cbind(df, Height, Weight)
df <- rbind(df, Kobe)
str(df)
df$Grade[11] <- 990
df$
str(df)
df <- rbind(df, Kobe)
str(df)
df <- rbind(df, Kobe)
str(df)
source('~/.active-rstudio-document')
head(df)
tail(df)
df$Grade <- as.integer(df$Grade)
df$Age <- as.numeric(df$Age)
df$Height <- as.numeric(df$Height)
df$Weight <- as.numeric(df$Weight)
str(df)
df$Grade[11] <- 990
df$Grade <- as.integer(df$Grade)
df$Age <- as.numeric(df$Age)
df$Height <- as.numeric(df$Height)
df$Weight <- as.numeric(df$Weight)
str(df)
df <- df[order(df$Grade, decreasing = T), ]
df <- subset(df, select = c(-Age))
names(df)[4] <- "ToeicGrade"
subset(df, Height > 170 & ToeicGrade > 900, select = c(Name, ToeicGrade, Height))
df[df$School == 'A', ]
df.sport <- data.frame(Name = c"Ali", "Petty", "Kobe"), FavSport = c("basketball", "baseball", "baseketball"))
df.sport <- data.frame(Name = c("Ali", "Petty", "Kobe"), FavSport = c("basketball", "baseball", "baseketball"))
df$ToeicLevel <- cut(x = df$ToeicGrade,
breaks = c(0, 600, 700, 800, 900, Inf),
labels = c("E", "D", "C", "B", "A"))
df$Bmi <- mapply(GetBmi, df$Height, df$Weight)
df <- merge(df, df.sport, by = 'Name', all.x = T)
View(df)
setwd("~/Documents/GitHub/CSX4001/week_3")
library(gdata)
install.packages(gdata)
install.packages("gdata")
help("read.csv")
library(gdata)
help(read.csv)
library(gdata)
help(read.csv)
my.data
my.data = read.csv("大安區垃圾桶.csv")
my.data
my.plot <- ggplot(diamonds, aes(carat, price, colour = cut))
library(ggplot)
install.packages("ggplot")
install.packages("ggplot2")
my.plot <- ggplot(diamonds, aes(carat, price, colour = cut))
library(gdata)
library(ggplot2)
help(read.csv)
my.data = read.csv("大安區垃圾桶.csv")
my.data
my.plot <- ggplot(diamonds, aes(carat, price, colour = cut))
my.plot
my.plot <- my.plot + layer(
geom = "point",
stat = "identity",
position = "identity",
params = list(na.rm = FALSE)
)
my.plot
my.plot <- ggplot(my.data), aes(carat, price, colour = cut))
my.plot <- ggplot(my.data, aes(carat, price, colour = cut))
my.plot <- my.plot + layer(
geom = "point",
stat = "identity",
position = "identity",
params = list(na.rm = FALSE)
)
my.plot
diamonds
my.data
my.plot <- ggplot(my.data, aes(序號, 經度, colour = cut))
my.plot
library(gdata)
my.plot <- ggplot(my.data, aes(序號, 經度, colour = 行政區))
my.plot
my.plot <- ggplot(my.data, aes(經度, 序號, colour = 行政區))
my.plot
my.plot <- my.plot + layer(
geom = "point",
stat = "identity",
position = "identity",
params = list(na.rm = FALSE)
)
my.plot
my.plot <- ggplot(my.data, aes(經度, 緯, colour = 分隊別))
my.plot <- my.plot + layer(
geom = "point",
stat = "identity",
position = "identity",
params = list(na.rm = FALSE)
)
my.plot
my.plot <- ggplot(my.data, aes(經度, 緯度, colour = 分隊別))
my.plot <- my.plot + layer(
geom = "point",
stat = "identity",
position = "identity",
params = list(na.rm = FALSE)
)
my.plot
my.plot <- my.plot + layer(
geom = "point",
stat = "identity",
position = "identity",
params = list(na.rm = TRUE)
)
my.plot2 <- ggplot(my.data, aes(x = 分隊別))
my.plot
my.plot <- my.plot + layer(
geom = "point",
stat = "identity",
position = "identity",
params = list(na.rm = FALSE)
)
my.plot
my.plot <- my.plot + layer(
geom = "point",
stat = "identity",
position = "identity",
params = list(na.rm = FALSE)
)
my.plot <- ggplot(my.data, aes(經度, 緯度, colour = 分隊別))
my.plot <- my.plot + layer(
geom = "point",
stat = "identity",
position = "identity",
params = list(na.rm = FALSE)
)
my.plot
my.plot <- my.plot + layer(
geom = "point",
stat = "identity",
position = "identity",
params = list(na.rm = FALSE)
)
my.plot
my.plot2 <- ggplot(my.data, aes(x = 分隊別))
my.plot2 <- my.plot2 + layer(
geom = "bar",
stat = "bin",
position = "identity",
params = list(
fill = "steelblue",
binwidth = 0.2,
na.rm = FALSE
)
)
my.plot2
my.plot2 <- my.plot2 + layer(
geom = "bar",
stat = "count",
position = "identity",
params = list(
fill = "steelblue",
binwidth = 0.2,
na.rm = FALSE
)
)
my.plot2
my.plot <- my.plot + layer(
geom = "point",
stat = "identity",
position = "identity",
params = list(na.rm = FALSE)
)
my.plot
my.plot2 <- ggplot(my.data, aes(x = 分隊別))
my.plot2 <- my.plot2 + layer(
geom = "bar",
stat = "count",
position = "identity",
params = list(
fill = "steelblue",
binwidth = 0.2,
na.rm = FALSE
)
)
my.plot2 <- ggplot(my.data, aes(x = 序號))
my.plot2 <- my.plot2 + layer(
geom = "bar",
stat = "bin",
position = "identity",
params = list(
fill = "steelblue",
binwidth = 0.2,
na.rm = FALSE
)
)
my.plot2
my.plot2 <- my.plot2 + layer(
geom = "bar",
stat = "bin",
position = "identity",
params = list(
fill = "steelblue",
binwidth = 2,
na.rm = FALSE
)
)
my.plot2
0.2
0.2
my.plot2 <- ggplot(my.data, aes(x = 序號))
my.plot2 <- my.plot2 + layer(
geom = "bar",
stat = "bin",
position = "identity",
params = list(
fill = "steelblue",
binwidth = 0.2,
na.rm = FALSE
)
)
my.plot2
my.plot <- ggplot(my.data, aes(經度, 緯度, colour = 分隊別))
my.plot <- my.plot + layer(
geom = "point",
stat = "identity",
position = "identity",
params = list(na.rm = FALSE)
)
my.plot
install.packages("ggmap")
install.packages("mapproj")
library(mapproj)
library(ggmap)
library(gdata)
library(ggplot2)
library(ggmap)
map <- get_map(location = 'Taiwan', zoom = 7)
ggmap(map)
library(mapproj)
library(ggmap)
citation('ggmap')
map <- get_map(location = 'Taiwan', zoom = 7)
TaipeiMap <- get_googlemap(
center  = c(lon=121.50,lat=25.06),
zoom = 11, maptype = 'roadmap'
)
library(ggmap)
citation('ggmap')
help(read.csv)
my.data = read.csv("大安區垃圾桶.csv")
my.data
my.plot <- ggplot(my.data, aes(經度, 緯度, colour = 分隊別))
my.plot <- my.plot + layer(
geom = "point",
stat = "identity",
position = "identity",
params = list(na.rm = FALSE)
)
my.plot
TaipeiMap <- get_googlemap(
center  = c(lon=121.50,lat=25.06),
zoom = 11, maptype = 'roadmap'
)
TaipeiMap
TaipeiMap <- get_googlemap(
center  = c(lon=121.50,lat=25.06),
zoom = 11, maptype = 'roadmap'
)
